// <auto-generated />
using System;
using DataAccess.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DataAccess.Migrations
{
    [DbContext(typeof(LibreriaContext))]
    [Migration("20220628232059_obligatorio")]
    partial class obligatorio
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Dominio.Compra", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Compras");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Compra");
                });

            modelBuilder.Entity("Dominio.FichaCuidados", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FrecuenciaRiego")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Illuminacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Temperatura")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("FichaCuidados");
                });

            modelBuilder.Entity("Dominio.ItemCompras", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int?>("CompraId")
                        .HasColumnType("int");

                    b.Property<int?>("PlantaCompradaId")
                        .HasColumnType("int");

                    b.Property<decimal>("PrecioCompraUnidad")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CompraId");

                    b.HasIndex("PlantaCompradaId");

                    b.ToTable("ItemCompras");
                });

            modelBuilder.Entity("Dominio.Planta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AlturaMaxima")
                        .HasColumnType("int");

                    b.Property<string>("Ambiente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FichaCuidadosId")
                        .HasColumnType("int");

                    b.Property<string>("FotoPlanta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreCientifico")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreTipo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombresVulgares")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FichaCuidadosId");

                    b.ToTable("Plantas");
                });

            modelBuilder.Entity("Dominio.Tipo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Tipos");
                });

            modelBuilder.Entity("Dominio.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Mail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Dominio.Importacion", b =>
                {
                    b.HasBaseType("Dominio.Compra");

                    b.Property<bool>("EsOrigenAmericaDelSur")
                        .HasColumnType("bit");

                    b.Property<double>("ImpuestoImportacion")
                        .HasColumnType("float");

                    b.Property<string>("MedidasSanitarias")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("PorcentajeDescuento")
                        .HasColumnType("float");

                    b.HasDiscriminator().HasValue("Importacion");
                });

            modelBuilder.Entity("Dominio.Plaza", b =>
                {
                    b.HasBaseType("Dominio.Compra");

                    b.Property<double>("Flete")
                        .HasColumnType("float");

                    b.Property<double>("Iva")
                        .HasColumnType("float");

                    b.HasDiscriminator().HasValue("Plaza");
                });

            modelBuilder.Entity("Dominio.ItemCompras", b =>
                {
                    b.HasOne("Dominio.Compra", null)
                        .WithMany("ItemCompras")
                        .HasForeignKey("CompraId");

                    b.HasOne("Dominio.Planta", "PlantaComprada")
                        .WithMany()
                        .HasForeignKey("PlantaCompradaId");
                });

            modelBuilder.Entity("Dominio.Planta", b =>
                {
                    b.HasOne("Dominio.FichaCuidados", "FichaCuidados")
                        .WithMany()
                        .HasForeignKey("FichaCuidadosId");
                });
#pragma warning restore 612, 618
        }
    }
}
